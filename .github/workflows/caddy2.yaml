name: caddy2

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/caddy2.yaml'
  schedule:
    - cron: "0 0 * * Sat"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go (cached)
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/go
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup Go (install if not cached)
        run: |
          if [ ! -d ${{ runner.temp }}/go/bin ]; then
            curl -sfL https://raw.githubusercontent.com/golang/go/master/src/install.sh | bash -
          fi
        shell: bash

      - name: Use Go cache (optional)
        uses: actions/cache@v3
        with:
          path: ${{ env.GOPATH }}/pkg/mod
          key: ${{ runner.os }}-gopath-${{ hashFiles('**/go.mod', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gopath-

      - name: Install dependencies (optional)
        run: |
          go mod download

      - name: Install xcaddy with latest tag
        run: |
          go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

      - name: Get latest Caddy version (using GitHub API v3)
        uses: gr2m/github-actions-get-latest-tag@v2
        with:
          owner: caddyserver
          repo: caddy
          # Use semantic versioning to filter releases (optional)
          # regex: '[0-9]+.[0-9]+.[0-9]+'

      - name: Build Caddy with plugins (improved error handling)
        run: |
          export version=${{ github.event.latest_tag }}  # Use retrieved tag
          export GOPATH=$HOME/go
          export PATH=$PATH:$GOPATH/bin

          for arch in amd64 arm64; do
            env GOOS=linux GOARCH=${arch} xcaddy build --version ${{ version }} \
              --with github.com/imgk/caddy-trojan \
              --with github.com/caddyserver/forwardproxy@caddy2=github.com/klzgrad/forwardproxy@naive \
              --output caddy_linux-${arch} || exit 1  # Propagate exit code on error
          done

      - name: Compress artifacts (improved compression)
        run: |
          for file in caddy_linux-*; do
            zstd -T 4 -k -19 "$file" -o "$file.zst"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: caddy
          path: ./caddy_linux-*.zst

      - name: Create GitHub release (improved error handling)
        uses: nlopez/release-action@v3.0.0
        with:
          tag: ${{ env.CADDY_TAG }}  # Use retrieved tag
          name: Caddy ${{ env.CADDY_TAG }} w/ Trojan & ForwardProxy
          body: ${{ steps.build.outputs.body }}  # Optional: Use previous step's output
          draft: false  # Set to true for draft releases
          prerelease: false  # Set to true for prereleases
          artifacts: ./caddy_linux-*.zst
          fail_on_missing_files: false  # Allow creation even if artifacts are missing
